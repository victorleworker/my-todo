version: "3.8"

services:

  todo-redis:
    container_name: todo-redis
    image: redis:5.0.3
    ports:
      - 6379:6379
  todo-postgres:
    container_name: todo-postgres
    build:
      context: ./todo-postgres
      dockerfile: Dockerfile.dev
    image: todo-postgres:1.0
    environment:
      POSTGRES_USER: todo
      POSTGRES_PASSWORD: todo1234
      POSTGRES_DB: todo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
  
  todo-elastic:
    container_name: todo-elastic
    image: elasticsearch:7.9.3
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
  
  todo-api:
    container_name: todo-api
    build:
      context: ./todo-api
      dockerfile: Dockerfile.dev
    image: todo-api:1.0
    command: sh /app/start.sh
    ports:
      - 3000:3000
    environment:
      POSTGRES_HOST: todo-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: todo
      POSTGRES_PASSWORD: todo1234
      POSTGRES_DATABASE: todo
      REDIS_HOST: todo-redis
      REDIS_PORT: 6379
      ELASTICSEARCH_HOST: todo-elastic
      ELASTICSEARCH_PORT: 9200
    volumes:
      - /app/node_modules
    depends_on:
      - todo-redis
      - todo-postgres
      - todo-elastic
  todo-view:
    container_name: todo-view
    build:
      context: ./todo-view
      dockerfile: Dockerfile.dev
    image: todo-view:1.0
    ports:
      - 4200:4200
    volumes:
      - ${PWD}/todo-view:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - todo-api

  todo-proxy:
    container_name: todo-proxy
    build:
      context: ./todo-proxy
      dockerfile: Dockerfile.dev
    image: todo-proxy:1.0
    ports:
      - 8080:80
    depends_on:
      - todo-view
      - todo-api
volumes:
  postgres_data:
  elastic_data:
